package com.example.bilkentcompanion;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.util.Log;

import com.example.bilkentcompanion.R;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.*;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;


public class DatabaseHelper {

    public static String getUID() {
        return FirebaseAuth.getInstance().getCurrentUser().getUid();
    }

    public static String getName(String uid) {
        return FirebaseDatabase.getInstance().getReference().child("Users").child(uid)
                .child("name").toString();
    }

    public static String getEmail(String uid) {
        return FirebaseDatabase.getInstance().getReference().child("Users").child(uid)
                .child("email").toString();
    }

    public static String getQuestion(String uid) {
        return FirebaseDatabase.getInstance().getReference().child("Users").child(uid)
                .child("question").toString();
    }

    public static String getAnswer(String uid) {
        return FirebaseDatabase.getInstance().getReference().child("Users").child(uid)
                .child("answer").toString();
    }

    //LostPost
    public static String getLostPostUID(String postID) {
        return FirebaseDatabase.getInstance().getReference().child("LostPost")
                .child(postID).child("uid").toString();
    }

    public static String[] getLostPostTags(String postID) {
        String s = FirebaseDatabase.getInstance().getReference().child("LostPost")
                .child(postID).child("tags").toString();
        return s.split("\\W+");
    }

    public static String getLostPostDate(String postID) {
        return FirebaseDatabase.getInstance().getReference().child("LostPost")
                .child(postID).child("date").toString();
    }

    public static String getLostPostName(String postID) {
        return FirebaseDatabase.getInstance().getReference().child("LostPost")
                .child(postID).child("name").toString();
    }

    public static String getLostPostCategory(String postID) {
        return FirebaseDatabase.getInstance().getReference().child("LostPost")
                .child(postID).child("category").toString();
    }

    public static String initialiseLostPost(String[] infos) {
        DatabaseReference ref = FirebaseDatabase.getInstance().getReference().child("LostPost")
                .push();

        HashMap<String, String> properties = new HashMap<>();
        properties.put("name", infos[0]);
        properties.put("uid", infos[1]);
        properties.put("category", infos[2]);
        properties.put("tags", infos[3]);
        properties.put("date", infos[4]);
        properties.put("key", ref.getKey());
        ref.setValue(properties);

        return ref.toString();
    }

    public static String initialiseSellPost(String[] infos) {
        DatabaseReference ref = FirebaseDatabase.getInstance().getReference().child("SellPost").push();

        HashMap<String, String> properties = new HashMap<>();
        properties.put("name", infos[0]);
        properties.put("uid", infos[1]);
        properties.put("category", infos[2]);
        properties.put("tags", infos[3]);
        properties.put("price", infos[4]);
        properties.put("key", ref.getKey());
        ref.setValue(properties);

        return ref.toString();
    }

    public static void setLostPostName(String postID, String data) {
        FirebaseDatabase.getInstance().getReference().child("LostPost")
                .child(postID).child("name").setValue(data);
    }

    public static void setLostPostUID(String postID, String data) {
        FirebaseDatabase.getInstance().getReference().child("LostPost")
                .child(postID).child("uid").setValue(data);
    }

    public static void setLostPostCategory(String postID, String data) {
        FirebaseDatabase.getInstance().getReference().child("LostPost")
                .child(postID).child("category").setValue(data);
    }

    public static void setLostPostTags(String postID, String data) {
        FirebaseDatabase.getInstance().getReference().child("LostPost")
                .child(postID).child("tags").setValue(data);
    }

    public static void setLostPostDate(String postID, String data) {
        FirebaseDatabase.getInstance().getReference().child("LostPost")
                .child(postID).child("date").setValue(data);
    }

    private static ArrayList<String> lostPosts;

    public static ArrayList<String> getAllLostPosts() {
        FirebaseDatabase.getInstance().getReference().child("LostPost")
                .addListenerForSingleValueEvent(new ValueEventListener() {
                    @Override
                    public void onDataChange(DataSnapshot dataSnapshot) {
                        lostPosts = new ArrayList<>();
                        for (DataSnapshot snapshot : dataSnapshot.getChildren()) {
                            lostPosts.add((String) snapshot.getValue());
                        }
                    }

                    @Override
                    public void onCancelled(DatabaseError databaseError) {
                    }
                });
        return lostPosts;
    }

    //SellPost
    public static String getSellPostUID(String postID) {
        return FirebaseDatabase.getInstance().getReference().child("SellPost")
                .child(postID).child("uid").toString();
    }

    public static String[] getSellPostTags(String postID) {
        String s = FirebaseDatabase.getInstance().getReference().child("SellPost")
                .child(postID).child("tags").toString();
        return s.split("\\W+");
    }

    /*public static String getSellInfo(String postID, String info) {
        final String information = info;
         DatabaseReference ref = FirebaseDatabase.getInstance().getReference().child("SellPost").child(postID);
         ref.addChildEventListener(new ChildEventListener() {
             @Override
             public void onChildAdded(@NonNull DataSnapshot dataSnapshot, @Nullable String s) {
                  String key = dataSnapshot.child(information).getValue(String.class);
                 return key;
             }

             @Override
             public void onChildChanged(@NonNull DataSnapshot dataSnapshot, @Nullable String s) {

             }

             @Override
             public void onChildRemoved(@NonNull DataSnapshot dataSnapshot) {

             }

             @Override
             public void onChildMoved(@NonNull DataSnapshot dataSnapshot, @Nullable String s) {

             }

             @Override
             public void onCancelled(@NonNull DatabaseError databaseError) {

             }
         });
    }*/

    public static String getSellPostName(String postID) {
        return FirebaseDatabase.getInstance().getReference().child("SellPost")
                .child(postID).child("name").toString();
    }

    public static String getSellPostCategory(String postID) {
        return FirebaseDatabase.getInstance().getReference().child("SellPost")
                .child(postID).child("category").toString();
    }


    public static void setSellPostName(String postID, String data) {
        FirebaseDatabase.getInstance().getReference().child("SellPost")
                .child(postID).child("name").setValue(data);
    }

    public static void setSellPostUID(String postID, String data) {
        FirebaseDatabase.getInstance().getReference().child("SellPost")
                .child(postID).child("uid").setValue(data);
    }

    public static void setSellPostCategory(String postID, String data) {
        FirebaseDatabase.getInstance().getReference().child("SellPost")
                .child(postID).child("category").setValue(data);
    }

    public static void setSellPostTags(String postID, String data) {
        FirebaseDatabase.getInstance().getReference().child("SellPost")
                .child(postID).child("tags").setValue(data);
    }

    public static void setSellPostPrice(String postID, String data) {
        FirebaseDatabase.getInstance().getReference().child("SellPost")
                .child(postID).child("price").setValue(data);
    }

    public static void deleteSellPost( String key ) {
        DatabaseReference ref = FirebaseDatabase.getInstance().getReference( "SellPost" ).child(key);
        ref.removeValue();
    }

    public static void deleteLostPost( String key ) {
        DatabaseReference ref = FirebaseDatabase.getInstance().getReference( "LostPost" ).child(key);
        ref.removeValue();
    }


    private static ArrayList<String> keysSellPosts;







}

