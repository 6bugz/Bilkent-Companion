package com.example.bilkentcompanion;

import android.content.Intent;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.Toast;

import java.text.SimpleDateFormat;
import java.util.Date;

public class SellAddItem extends AppCompatActivity implements AdapterView.OnItemSelectedListener {
    Spinner category;
    String categorySelect;
    Button delete;
    Button add;
    EditText itemName;
    EditText priceText;
    String stringDate;
    EditText description;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_sell_add_item);

        //spinner
        category = findViewById(R.id.buySellSpinner);
        ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(this, R.array.buySellCategories, android.R.layout.simple_spinner_item);
        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        category.setAdapter(adapter);
        category.setOnItemSelectedListener(this);

        //delete and add buttons
        deleteButtonActions();
        addButtonActions();
    }

    //get item name
    public String getName() {
        itemName = findViewById(R.id.editText);
        return itemName.getText().toString();
    } //TODO: PUT THIS INFO IN THE DATABASE

    //get price
    public int getPrice() {
        int price;
        priceText = findViewById(R.id.description);
        price = Integer.parseInt(String.valueOf(priceText.getText()));
        if (price > 1000 || price < 0) {
            Toast.makeText(getApplicationContext(), "Enter a price between 0 and 1000", Toast.LENGTH_SHORT).show();
            return -1;
        } else {
            return price;
        }//TODO control this part
    }//TODO: PUT THIS INFO IN THE DATABASE

    public String getDescription() {
        String descriptionFull;
        description = findViewById(R.id.descriptionSell);
        descriptionFull = String.valueOf(description.getText());
        return descriptionFull;
    }//TODO: PUT THIS INFO IN THE DATABASE


    private void addButtonActions() {
        add = (Button) findViewById(R.id.addItem);
        add.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                //get the date
                Date date = new Date();
                SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
                stringDate = formatter.format(date);

                //String uid = getUID;
                String uid = "cansu";

                String[] info = {getName(), uid,categorySelect, getDescription(),"" + getPrice() };
                //DatabaseHelper.initialiseSellPost(info);

               Log.i("database", DatabaseHelper.initialiseSellPost(info));

                //pass the info to items page to see the item
                Intent added = new Intent(SellAddItem.this, OnSalePage.class);
                //Item item = new Item(categorySelect, getPrice(), getDescription(), getName(), stringDate);
                //added.putExtra("item", item);
                startActivity(added);
            }
        });
    }
    //TODO: IF THIS BUTTON IS CLICKED STORE ALL THE INFO IN DATABASE

    private void deleteButtonActions() {
        delete = (Button) findViewById(R.id.deleteButton);
        delete.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                //delete info TODO
                //pass to the previous page
                Intent deleted = new Intent(SellAddItem.this, BuyFilter.class);
                startActivity(deleted);
            }
        });
    }  //TODO: IF THIS BUTTON IS CLICKED DELETE ITEM INFO FROM DATABASE

    @Override
    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
        categorySelect = parent.getItemAtPosition(position).toString();
    }

    @Override
    public void onNothingSelected(AdapterView<?> parent) {
    }

    @Override
    public void onPointerCaptureChanged(boolean hasCapture) {

    }
}



